<?php
/**
 * 用户中心
 */

namespace app\index\controller;

use think\Config;
use think\Controller;
use app\index\controller\Base;
use think\Request;
use think\Session;
use think\Db;
class User extends Controller
{
   public function _initialize()
   {
       parent::_initialize(); // TODO: Change the autogenerated stub
       $config = Db::name('config')->where(['id'=>1])->find();
       $this->assign('config',$config);

       $path =Request::instance()->baseUrl();
       $this->assign('path',$path);

       if(session('info') != null && is_array(session('info'))){
           return  $this->index();
       }else {
           return $this->redirect('login/login');
       }


   }

    //会员中心
    public function index()
    {
        return $this->fetch();
    }

    //我的订单
    public function myorder()
    {
        if($this->request->isGet()){
            $id = session('info.id');

            if(checkEmptyid($id)){
                return false;
            }

            $good  = Db::name('goods')->field('id,title')->where(['status'=>1])->select();
            $goods = array_column($good,'title','id');
            $list = Db::name('order')->where(['member_id'=>$id,'is_delete'=>0])->order('create_time desc')->paginate(15);
            $this->assign('list',$list);
            $this->assign('goods',$goods);
            return $this->fetch();

        }
        return false;
    }

    //充值记录
    public function mychongzi()
    {
       if($this->request->isGet()){
           $id  = session('info.id');
            if(checkEmptyid($id)){
                return false;
            }
            $paylist = Db::name('member_pay')->where(['id'=>$id,'del_time'=>null])->order('create_time desc')->paginate(15);
            $member  = Db::name('member')->field('account,id')->where(['id'=>$id,'status'=>1])->select();
            $members = array_column($member,'account','id');
            $this->assign('paylist',$paylist);
            $this->assign('members',$members);
            return $this->fetch();
       }
         return false;
    }

    /***充值页面**/
    public function recharge()
    {
        if($this->request->isGet()){ 

            return $this->fetch();
        }
        return false;
    }


    /**开通页面**/
    public function vip()
    {
       if($this->request->isGet()){
           return $this->fetch();
       }
       return false;
    }


    /**成为会员 **/
    public function setvip(){
        if($this->request->isPost()){

        }

        return false;
    }

    /***修改密码***/
    public function editpwd()
    {
        if($this->request->isGet()){
            return $this->fetch();
        }

        if($this->request->isPost()){
            $pwd = $this->request->param();
            $info  = Session::get('info');
            $ret = Db::name('member')->where(['id'=>$info['id']])->find();
            if($ret['password'] != md5(md5($pwd['data']['oldpwd']).$ret['rand'])){
                return json(['code'=>400,'msg'=>'原始密码输入不对']);
            }

            if($ret['password'] == md5(md5($pwd['data']['oldpwd']).$ret['rand'])){
                $result = Db::name('member')->where(['id'=>$info['id']])->update(
                    [
                   'password'=>md5(md5($pwd['data']['newpwd']).$ret['rand'])
                   ]);
                if($result){
                    return json(['code'=>200,'msg'=>'操作成功']);
                }else {
                    return json(['code'=>500,'msg'=>'操作失败']);
                }

            }

        }

    }



}
